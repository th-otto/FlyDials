/* GEM Resource C Source */

#include <portab.h>
#include <aes.h>
#include "UHR.H"

#if !defined(WHITEBAK)
#define WHITEBAK    0x0040
#endif
#if !defined(DRAW3D)
#define DRAW3D      0x0080
#endif

#define FLAGS9  0x0200
#define FLAGS10 0x0400
#define FLAGS11 0x0800
#define FLAGS12 0x1000
#define FLAGS13 0x2000
#define FLAGS14 0x4000
#define FLAGS15 0x8000
#define STATE8  0x0100
#define STATE9  0x0200
#define STATE10 0x0400
#define STATE11 0x0800
#define STATE12 0x1000
#define STATE13 0x2000
#define STATE14 0x4000
#define STATE15 0x8000

WORD RSBB0DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2108, 
  0x4104, 0x4104, 0x8102, 0x8102, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB1DATA[] =
{ 0x0380, 0x07C0, 0x1FF0, 0x3FF8, 
  0x7FFC, 0x7FFC, 0xFFFE, 0xFFFE, 
  0xFFFE, 0xFFFE, 0xFFFE, 0x7FFC, 
  0x7FFC, 0x3FF8, 0x1FF0, 0x07C0
};

WORD RSBB2DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4024, 0x4044, 0x8082, 0x8082, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB3DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8032, 0x80C2, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB4DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x81FA, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB5DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x80C2, 0x8032, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB6DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8082, 0x8082, 0x4044, 
  0x4024, 0x2008, 0x1830, 0x07C0
};

WORD RSBB7DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8102, 0x8102, 0x4104, 
  0x4104, 0x2108, 0x1830, 0x07C0
};

WORD RSBB8DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8202, 0x8202, 0x4404, 
  0x4804, 0x2008, 0x1830, 0x07C0
};

WORD RSBB9DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8602, 0x9802, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB10DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0xBF02, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB11DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x9802, 0x8602, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB12DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4804, 0x4404, 0x8202, 0x8202, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB13DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4104, 0x4104, 0x8102, 0x8102, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB14DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4044, 0x8082, 0x8082, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB15DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8022, 0x80C2, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB16DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x81F2, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB17DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x80C2, 0x8022, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB18DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8082, 0x8082, 0x4044, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB19DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8102, 0x8102, 0x4104, 
  0x4104, 0x2008, 0x1830, 0x07C0
};

WORD RSBB20DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8202, 0x8202, 0x4404, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB21DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x8102, 0x8602, 0x8802, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB22DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8002, 0x8002, 
  0x9F02, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB23DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4004, 0x8802, 0x8602, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

WORD RSBB24DATA[] =
{ 0x0380, 0x07C0, 0x1830, 0x2008, 
  0x4004, 0x4404, 0x8202, 0x8202, 
  0x8102, 0x8002, 0x8002, 0x4004, 
  0x4004, 0x2008, 0x1830, 0x07C0
};

BITBLK rs_bitblk[] =
{ RSBB0DATA,   2,  16,   0,   0, 0x0001,
  RSBB1DATA,   2,  16,   0,   0, 0x0001,
  RSBB2DATA,   2,  16,   0,   0, 0x0001,
  RSBB3DATA,   2,  16,   0,   0, 0x0001,
  RSBB4DATA,   2,  16,   0,   0, 0x0001,
  RSBB5DATA,   2,  16,   0,   0, 0x0001,
  RSBB6DATA,   2,  16,   0,   0, 0x0001,
  RSBB7DATA,   2,  16,   0,   0, 0x0001,
  RSBB8DATA,   2,  16,   0,   0, 0x0001,
  RSBB9DATA,   2,  16,   0,   0, 0x0001,
  RSBB10DATA,   2,  16,   0,   0, 0x0001,
  RSBB11DATA,   2,  16,   0,   0, 0x0001,
  RSBB12DATA,   2,  16,   0,   0, 0x0001,
  RSBB13DATA,   2,  16,   0,   0, 0x0001,
  RSBB14DATA,   2,  16,   0,   0, 0x0001,
  RSBB15DATA,   2,  16,   0,   0, 0x0001,
  RSBB16DATA,   2,  16,   0,   0, 0x0001,
  RSBB17DATA,   2,  16,   0,   0, 0x0001,
  RSBB18DATA,   2,  16,   0,   0, 0x0001,
  RSBB19DATA,   2,  16,   0,   0, 0x0001,
  RSBB20DATA,   2,  16,   0,   0, 0x0001,
  RSBB21DATA,   2,  16,   0,   0, 0x0001,
  RSBB22DATA,   2,  16,   0,   0, 0x0001,
  RSBB23DATA,   2,  16,   0,   0, 0x0001,
  RSBB24DATA,   2,  16,   0,   0, 0x0001
};

OBJECT rs_object[] =
{ 
  /******** Tree 0 TEST ****************************************************/
        -1, SEC00           , MIN55           , G_BOX             ,   /* Object 0  */
  NONE, OUTLINED, (LONG)0x00021100L,
  0x0000, 0x0000, 0x003B, 0x0009,
  UHRBG           ,       -1,       -1, G_IMAGE           ,   /* Object 1 SEC00 */
  NONE, NORMAL, (LONG)&rs_bitblk[0],
  0x0006, 0x0001, 0x0002, 0x0001,
  SEC05           ,       -1,       -1, G_IMAGE           ,   /* Object 2 UHRBG */
  NONE, NORMAL, (LONG)&rs_bitblk[1],
  0x0002, 0x0003, 0x0002, 0x0001,
  SEC10           ,       -1,       -1, G_IMAGE           ,   /* Object 3 SEC05 */
  NONE, NORMAL, (LONG)&rs_bitblk[2],
  0x0009, 0x0001, 0x0002, 0x0001,
  SEC15           ,       -1,       -1, G_IMAGE           ,   /* Object 4 SEC10 */
  NONE, NORMAL, (LONG)&rs_bitblk[3],
  0x000C, 0x0001, 0x0002, 0x0001,
  SEC20           ,       -1,       -1, G_IMAGE           ,   /* Object 5 SEC15 */
  NONE, NORMAL, (LONG)&rs_bitblk[4],
  0x000F, 0x0001, 0x0002, 0x0001,
  SEC25           ,       -1,       -1, G_IMAGE           ,   /* Object 6 SEC20 */
  NONE, NORMAL, (LONG)&rs_bitblk[5],
  0x0012, 0x0001, 0x0002, 0x0001,
  SEC30           ,       -1,       -1, G_IMAGE           ,   /* Object 7 SEC25 */
  NONE, NORMAL, (LONG)&rs_bitblk[6],
  0x0015, 0x0001, 0x0002, 0x0001,
  SEC35           ,       -1,       -1, G_IMAGE           ,   /* Object 8 SEC30 */
  NONE, NORMAL, (LONG)&rs_bitblk[7],
  0x0018, 0x0001, 0x0002, 0x0001,
  SEC40           ,       -1,       -1, G_IMAGE           ,   /* Object 9 SEC35 */
  NONE, NORMAL, (LONG)&rs_bitblk[8],
  0x001B, 0x0001, 0x0002, 0x0001,
  SEC45           ,       -1,       -1, G_IMAGE           ,   /* Object 10 SEC40 */
  NONE, NORMAL, (LONG)&rs_bitblk[9],
  0x001E, 0x0001, 0x0002, 0x0001,
  SEC50           ,       -1,       -1, G_IMAGE           ,   /* Object 11 SEC45 */
  NONE, NORMAL, (LONG)&rs_bitblk[10],
  0x0021, 0x0001, 0x0002, 0x0001,
  SEC55           ,       -1,       -1, G_IMAGE           ,   /* Object 12 SEC50 */
  NONE, NORMAL, (LONG)&rs_bitblk[11],
  0x0024, 0x0001, 0x0002, 0x0001,
  MIN00           ,       -1,       -1, G_IMAGE           ,   /* Object 13 SEC55 */
  NONE, NORMAL, (LONG)&rs_bitblk[12],
  0x0027, 0x0001, 0x0002, 0x0001,
  MIN05           ,       -1,       -1, G_IMAGE           ,   /* Object 14 MIN00 */
  NONE, NORMAL, (LONG)&rs_bitblk[13],
  0x0006, 0x0003, 0x0002, 0x0001,
  MIN10           ,       -1,       -1, G_IMAGE           ,   /* Object 15 MIN05 */
  NONE, WHITEBAK, (LONG)&rs_bitblk[14],
  0x0009, 0x0003, 0x0002, 0x0001,
  MIN15           ,       -1,       -1, G_IMAGE           ,   /* Object 16 MIN10 */
  NONE, NORMAL, (LONG)&rs_bitblk[15],
  0x000C, 0x0003, 0x0002, 0x0001,
  MIN20           ,       -1,       -1, G_IMAGE           ,   /* Object 17 MIN15 */
  NONE, NORMAL, (LONG)&rs_bitblk[16],
  0x000F, 0x0003, 0x0002, 0x0001,
  MIN25           ,       -1,       -1, G_IMAGE           ,   /* Object 18 MIN20 */
  NONE, NORMAL, (LONG)&rs_bitblk[17],
  0x0012, 0x0003, 0x0002, 0x0001,
  MIN30           ,       -1,       -1, G_IMAGE           ,   /* Object 19 MIN25 */
  NONE, NORMAL, (LONG)&rs_bitblk[18],
  0x0015, 0x0003, 0x0002, 0x0001,
  MIN35           ,       -1,       -1, G_IMAGE           ,   /* Object 20 MIN30 */
  NONE, NORMAL, (LONG)&rs_bitblk[19],
  0x0018, 0x0003, 0x0002, 0x0001,
  MIN40           ,       -1,       -1, G_IMAGE           ,   /* Object 21 MIN35 */
  NONE, NORMAL, (LONG)&rs_bitblk[20],
  0x001B, 0x0003, 0x0002, 0x0001,
  MIN45           ,       -1,       -1, G_IMAGE           ,   /* Object 22 MIN40 */
  NONE, NORMAL, (LONG)&rs_bitblk[21],
  0x001E, 0x0003, 0x0002, 0x0001,
  MIN50           ,       -1,       -1, G_IMAGE           ,   /* Object 23 MIN45 */
  NONE, NORMAL, (LONG)&rs_bitblk[22],
  0x0021, 0x0003, 0x0002, 0x0001,
  MIN55           ,       -1,       -1, G_IMAGE           ,   /* Object 24 MIN50 */
  NONE, NORMAL, (LONG)&rs_bitblk[23],
  0x0024, 0x0003, 0x0002, 0x0001,
         0,       -1,       -1, G_IMAGE           ,   /* Object 25 MIN55 */
  LASTOB, NORMAL, (LONG)&rs_bitblk[24],
  0x0027, 0x0003, 0x0002, 0x0001
};

OBJECT *rs_trindex[] =
{ &rs_object[0]    /* Tree  0 TEST             */
};
